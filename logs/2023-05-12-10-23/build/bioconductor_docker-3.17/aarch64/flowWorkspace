+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''flowWorkspace'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'flowWorkspace'
also installing the dependency ‘XML’

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/XML_3.99-0.14.tar.gz'
Content type 'binary/octet-stream' length 973327 bytes (950 KB)
==================================================
downloaded 950 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/flowWorkspace_4.12.0.tar.gz'
Content type 'application/x-gzip' length 4570867 bytes (4.4 MB)
==================================================
downloaded 4.4 MB

* installing *source* package ‘XML’ ...
** package ‘XML’ successfully unpacked and MD5 sums checked
** using staged installation
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking how to run the C preprocessor... gcc -E
checking for sed... /usr/bin/sed
checking for pkg-config... /usr/bin/pkg-config
checking for xml2-config... /usr/bin/xml2-config
USE_XML2 = yes
SED_EXTENDED_ARG: -E
Minor 9, Patch 13 for 2.9.13
Located parser file -I/usr/include/libxml2/parser.h
Checking for 1.8:  -I/usr/include/libxml2
Using libxml2.*
checking for gzopen in -lz... yes
checking for xmlParseFile in -lxml2... yes
checking for xmlHashSize in -lxml2... yes
Using built-in xmlHashSize
Checking DTD parsing (presence of externalSubset)...
checking for xmlHashSize in -lxml2... (cached) yes
Found xmlHashSize
checking for xmlOutputBufferCreateBuffer in -lxml2... yes
have xmlOutputBufferCreateBuffer()
checking for xmlDocDumpFormatMemoryEnc in -lxml2... yes
checking for libxml/xmlversion.h... yes
Expat:  FALSE
Checking for return type of xmlHashScan element routine.
No return value for xmlHashScan
xmlNs has a context field
Checking for cetype_t enumeration
Using recent version of R with cetype_t enumeration type for encoding
checking for xmlsec1-config... no
nodegc default 
xml-debug default 
Version has XML_WITH_ZLIB
Version has xmlHasFeature()

****************************************
Configuration information:

Libxml settings

libxml include directory: -I/usr/include/libxml2
libxml library directory: -lxml2 -lz  -lxml2
libxml 2:                 -DLIBXML2=1

Compilation flags:         -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1 
Link flags:               -lxml2 -lz  -lxml2

****************************************
configure: creating ./config.status
config.status: creating src/Makevars
config.status: creating R/supports.R
config.status: creating inst/scripts/RSXML.csh
config.status: creating inst/scripts/RSXML.bsh
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c DocParse.c -o DocParse.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c EventParse.c -o EventParse.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ExpatParse.c -o ExpatParse.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c HTMLParse.c -o HTMLParse.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c NodeGC.c -o NodeGC.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RSDTD.c -o RSDTD.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RUtils.c -o RUtils.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Rcatalog.c -o Rcatalog.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c Utils.c -o Utils.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c XMLEventParse.c -o XMLEventParse.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c XMLHashTree.c -o XMLHashTree.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c XMLTree.c -o XMLTree.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c fixNS.c -o fixNS.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c libxmlFeatures.c -o libxmlFeatures.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c schema.c -o schema.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c xmlsecurity.c -o xmlsecurity.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_R_CETYPE_T=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1  -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c xpath.c -o xpath.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o XML.so DocParse.o EventParse.o ExpatParse.o HTMLParse.o NodeGC.o RSDTD.o RUtils.o Rcatalog.o Utils.o XMLEventParse.o XMLHashTree.o XMLTree.o fixNS.o libxmlFeatures.o schema.o xmlsecurity.o xpath.o -lxml2 -lz -lxml2 -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-XML/00new/XML/libs
** R
** inst
** byte-compile and prepare package for lazy loading
Creating a generic function for ‘source’ from package ‘base’ in package ‘XML’
in method for ‘xmlAttrsToDataFrame’ with signature ‘"AsIs"’: no definition for class “AsIs”
in method for ‘readKeyValueDB’ with signature ‘"AsIs"’: no definition for class “AsIs”
in method for ‘readSolrDoc’ with signature ‘"AsIs"’: no definition for class “AsIs”
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘XML’ as ‘XML_3.99-0.14_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (XML)
* installing *source* package ‘flowWorkspace’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c R_API.cpp -o R_API.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_API.cpp:9:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c R_GatingHierarchy.cpp -o R_GatingHierarchy.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from R_GatingHierarchy.cpp:18:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/deque.tcc:426:21:   required from ‘void std::deque<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_deque.h:985:23:   required from ‘std::deque<_Tp, _Alloc>::deque(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::deque<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::deque<std::__cxx11::basic_string<char> >; RangeT = std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
R_GatingHierarchy.cpp:609:29:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c R_GatingSet.cpp -o R_GatingSet.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from R_GatingSet.cpp:10:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cpp11.cpp -o cpp11.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrameView.hpp:12,
                 from flowWorkspace_types.h:7,
                 from cpp11.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cytoframeAPI.cpp -o cytoframeAPI.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytoframeAPI.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cytosetAPI.cpp -o cytosetAPI.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/H5CytoFrame.hpp:12,
                 from cytosetAPI.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c getDescendants.cpp -o getDescendants.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getDescendants.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c getPopStats.cpp -o getPopStats.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getPopStats.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c getSingleCellExpression.cpp -o getSingleCellExpression.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from getSingleCellExpression.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c h5_error_r_handler.cpp -o h5_error_r_handler.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from ../inst/include/flowWorkspace/pairVectorCpp11Convert.h:12,
                 from h5_error_r_handler.cpp:8:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -DROUT -I../inst/include -DBOOST_NO_AUTO_PTR -Wno-pedantic -I'/usr/local/lib/R/site-library/cpp11/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/RProtoBufLib/include' -I'/tmp/tmp/built/cytolib/include' -I'/tmp/tmp/built/Rhdf5lib/include' -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c setCounts.cpp -o setCounts.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:81:13:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FinderConcept<boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:98:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:40:18: note: in a call to non-static member function ‘void boost::algorithm::FinderConcept<FinderT, IteratorT>::constraints() [with FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   40 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::constraint<Model>::failed() [with Model = boost::algorithm::FormatterConcept<boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >, boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_format.hpp:103:13:   required from ‘void boost::algorithm::find_format_all(SequenceT&, FinderT, FormatterT) [with SequenceT = std::__cxx11::basic_string<char>; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/replace.hpp:652:48:   required from ‘void boost::algorithm::replace_all(SequenceT&, const Range1T&, const Range2T&) [with SequenceT = std::__cxx11::basic_string<char>; Range1T = std::__cxx11::basic_string<char>; Range2T = std::__cxx11::basic_string<char>]’
/tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:354:25:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:65:52: warning: ‘this’ pointer is null [-Wnonnull]
   65 |     static void failed() { ((Model*)0)->constraints(); }
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:26,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:16,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:23,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/concept.hpp:65:18: note: in a call to non-static member function ‘void boost::algorithm::FormatterConcept<FormatterT, FinderT, IteratorT>::constraints() [with FormatterT = boost::algorithm::detail::const_formatF<boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >; FinderT = boost::algorithm::detail::first_finderF<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::algorithm::is_equal>; IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   65 |             void constraints()
      |                  ^~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/equal.hpp:174:13:   required from ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&) [with SinglePassRange1 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; SinglePassRange2 = boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:644:32:   required from ‘bool boost::operator==(const boost::iterator_range<IteratorT>&, const boost::iterator_range<Iterator2T>&) [with Iterator1T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Iterator2T = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/find_iterator.hpp:359:32:   required from ‘bool boost::algorithm::split_iterator<IteratorT>::equal(const boost::algorithm::split_iterator<IteratorT>&) const [with IteratorT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:649:26:   required from ‘static bool boost::iterators::iterator_core_access::equal(const Facade1&, const Facade2&, mpl_::true_) [with Facade1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Facade2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; mpl_::true_ = mpl_::bool_<true>]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:981:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator==(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC1 = boost::iterators::forward_traversal_tag; Reference1 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference1 = long int; Derived2 = boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; V2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; TC2 = boost::iterators::forward_traversal_tag; Reference2 = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >&; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_adaptor.hpp:305:29:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/functions.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range_core.hpp:38,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/iterator_range.hpp:13,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/as_literal.hpp:18,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string/trim.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/algorithm/string.hpp:19,
                 from /tmp/tmp/built/cytolib/include/cytolib/transformation.hpp:18,
                 from /tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:15,
                 from /tmp/tmp/built/cytolib/include/cytolib/CytoFrame.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/MemCytoFrame.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/gate.hpp:12,
                 from /tmp/tmp/built/cytolib/include/cytolib/POPINDICES.hpp:14,
                 from /tmp/tmp/built/cytolib/include/cytolib/nodeProperties.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/populationTree.hpp:13,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingHierarchy.hpp:17,
                 from /tmp/tmp/built/cytolib/include/cytolib/GatingSet.hpp:14,
                 from setCounts.cpp:1:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::SinglePassRangeConcept<const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_facade.hpp:982:3:   required from ‘typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type boost::iterators::operator!=(const boost::iterators::iterator_facade<Derived1, V1, TC1, Reference1, Difference1>&, const boost::iterators::iterator_facade<Derived2, V2, TC2, Reference2, Difference2>&) [with Derived1 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V1 = std::__cxx11::basic_string<char>; TC1 = boost::iterators::forward_traversal_tag; Reference1 = std::__cxx11::basic_string<char>; Difference1 = long int; Derived2 = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; V2 = std::__cxx11::basic_string<char>; TC2 = boost::iterators::forward_traversal_tag; Reference2 = std::__cxx11::basic_string<char>; Difference2 = long int; typename boost::iterators::detail::enable_if_interoperable<Derived1, Derived2, typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type>::type = bool; typename boost::mpl::apply2<boost::iterators::detail::always_bool2, Derived1, Derived2>::type = bool]’
/usr/include/c++/11/bits/stl_vector.h:1562:21:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/include/c++/11/bits/stl_vector.h:657:23:   required from ‘std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::__cxx11::basic_string<char>, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >, boost::use_default, boost::use_default>; <template-parameter-2-2> = void; _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/iter_find.hpp:186:31:   required from ‘SequenceSequenceT& boost::algorithm::iter_split(SequenceSequenceT&, RangeT&&, FinderT) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; FinderT = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]’
/usr/local/lib/R/site-library/BH/include/boost/algorithm/string/split.hpp:158:50:   required from ‘SequenceSequenceT& boost::algorithm::split(SequenceSequenceT&, RangeT&&, PredicateT, boost::algorithm::token_compress_mode_type) [with SequenceSequenceT = std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >; RangeT = const std::__cxx11::basic_string<char>&; PredicateT = boost::algorithm::detail::is_any_ofF<char>]’
/tmp/tmp/built/cytolib/include/cytolib/compensation.hpp:55:15:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const boost::iterator_range<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o flowWorkspace.so R_API.o R_GatingHierarchy.o R_GatingSet.o cpp11.o cytoframeAPI.o cytosetAPI.o getDescendants.o getPopStats.o getSingleCellExpression.o h5_error_r_handler.o setCounts.o /tmp/tmp/built/cytolib/lib/libcytolib.a /tmp/tmp/built/Rhdf5lib/lib/libhdf5_cpp.a /tmp/tmp/built/Rhdf5lib/lib/libhdf5.a -lcrypto -lcurl -lsz -laec -lz -ldl -lm -llapack -lblas -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-flowWorkspace/00new/flowWorkspace/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘flowWorkspace’ as ‘flowWorkspace_4.12.0_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (flowWorkspace)

The downloaded source packages are in
	‘/tmp/RtmpaMUNwB/downloaded_packages’
Old packages: 'cachem', 'evaluate', 'httpuv', 'httr', 'httr2', 'later',
  'profvis', 'sass', 'testthat', 'viridisLite', 'waldo', 'class', 'KernSmooth',
  'MASS', 'nnet'

real	25m9.629s
user	24m43.100s
sys	0m25.766s
