+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''CNVrd2'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'CNVrd2'
also installing the dependencies ‘coda’, ‘rjags’, ‘gridExtra’

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/coda_0.19-4.tar.gz'
Content type 'binary/octet-stream' length 73859 bytes (72 KB)
==================================================
downloaded 72 KB

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/rjags_4-14.tar.gz'
Content type 'binary/octet-stream' length 74438 bytes (72 KB)
==================================================
downloaded 72 KB

trying URL 'https://packagemanager.posit.co/cran/latest/src/contrib/gridExtra_2.3.tar.gz'
Content type 'application/x-tar' length 1058173 bytes (1.0 MB)
==================================================
downloaded 1.0 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/CNVrd2_1.38.0.tar.gz'
Content type 'application/x-gzip' length 2657738 bytes (2.5 MB)
==================================================
downloaded 2.5 MB

* installing *source* package ‘coda’ ...
** package ‘coda’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘coda’ as ‘coda_0.19-4_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (coda)
* installing *source* package ‘gridExtra’ ...
** package ‘gridExtra’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘gridExtra’ as ‘gridExtra_2.3_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (gridExtra)
* installing *source* package ‘rjags’ ...
** package ‘rjags’ successfully unpacked and MD5 sums checked
** using staged installation
checking for pkg-config... /usr/bin/pkg-config
configure: Setting compile and link flags according to pkg-config
configure: Compile flags are -I/usr/include/JAGS
configure: Link flags are -ljags
checking for gcc... gcc
checking whether we are using the GNU C compiler... no
checking whether gcc accepts -g... no
checking for gcc option to accept ISO C89... unsupported
checking for jags_version in -ljags... yes
checking version of JAGS library... OK
configure: creating ./config.status
config.status: creating src/Makevars
configure: creating ./config.status
config.status: creating src/Makevars
config.status: creating R/unix/zzz.R
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/JAGS   -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c init.c -o init.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/JAGS   -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c jags.cc -o jags.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/JAGS   -I/usr/local/include    -fPIC  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c parallel.cc -o parallel.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o rjags.so init.o jags.o parallel.o -ljags -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-rjags/00new/rjags/libs
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘rjags’ as ‘rjags_4-14_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (rjags)
* installing *source* package ‘CNVrd2’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘CNVrd2’ as ‘CNVrd2_1.38.0_R_aarch64-unknown-linux-gnu.tar.gz’
* DONE (CNVrd2)

The downloaded source packages are in
	‘/tmp/RtmpPRWl1l/downloaded_packages’
Old packages: 'S4Arrays', 'cachem', 'evaluate', 'httpuv', 'httr', 'httr2',
  'later', 'profvis', 'sass', 'testthat', 'tzdb', 'viridisLite', 'waldo',
  'class', 'KernSmooth', 'MASS', 'nnet'

real	8m28.368s
user	8m13.219s
sys	0m12.430s
